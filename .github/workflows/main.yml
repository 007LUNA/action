name: Deploy Laravel on AWS

on:
  workflow_dispatch:
    inputs:
      reName:
        description: 'Enter the directory name for the Laravel application'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Configure SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > ssh_key.pem
          sudo chmod 600 ssh_key.pem  # Restrict permissions to read/write for the owner

      - name: Debug SSH Key
        run: |
          echo "Verifying SSH key setup"
          ls -la ssh_key.pem  # List to confirm the file exists and has correct permissions
          cat ssh_key.pem | head -n 5  # Output the first few lines to verify contents

      - name: Deploy to AWS EC2
        env:
          SERVER_IP: "13.215.232.150"
          NEW_DIR_NAME: ${{ github.event.inputs.reName }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DB: "laravel"
          MYSQL_USER: "action"
          MYSQL_USER_PASSWORD: ${{ secrets.MYSQL_USER_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@$SERVER_IP << EOF
            sudo apt update && sudo apt install -y mysql-server

            sudo sed -i "s/bind-address.*/bind-address = 0.0.0.0/" /etc/mysql/mysql.conf.d/mysqld.cnf
            sudo systemctl restart mysql

            sudo mysql -u root <<EOSQL
              ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY '$MYSQL_ROOT_PASSWORD';
              FLUSH PRIVILEGES;
              CREATE DATABASE IF NOT EXISTS $MYSQL_DB;
              CREATE USER IF NOT EXISTS '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_USER_PASSWORD';
              GRANT ALL PRIVILEGES ON $MYSQL_DB.* TO '$MYSQL_USER'@'%';
              FLUSH PRIVILEGES;
            EOSQL

            cd /var/www
            sudo rm -rf $NEW_DIR_NAME
            sudo git clone https://github.com/007LUNA/laravel-action.git $NEW_DIR_NAME
            cd $NEW_DIR_NAME
            sudo git checkout main
            sudo cp .env.example .env
            sudo sed -i "s/DB_HOST=.*/DB_HOST=127.0.0.1/" .env
            sudo sed -i "s/DB_DATABASE=.*/DB_DATABASE=$MYSQL_DB/" .env
            sudo sed -i "s/DB_USERNAME=.*/DB_USERNAME=$MYSQL_USER/" .env
            sudo sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=$MYSQL_USER_PASSWORD/" .env
            sudo apt install -y composer
            sudo composer install --optimize-autoloader --no-dev
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache
            php artisan key:generate
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
          EOF

      - name: Clean up SSH key
        run: rm ssh_key.pem

